<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EIBCEIH/2Q==
</value>
  </data>
</root>