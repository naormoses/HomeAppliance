<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>